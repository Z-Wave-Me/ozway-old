<?xml version="1.0" encoding="utf-8"?>
<ZWaveDevice xmlns="http://www.pepper1.net/zwavedb/xml-schemata/z-wave" schemaVersion="2"><descriptorVersion>1</descriptorVersion><deviceData><manufacturerId value="0173"/><productType value="0003"/><productId value="0003"/><protoVersion value="06"/><protoSubVersion value="51"/><appVersion value="00"/><appSubVersion value="00"/><basicClass value="03"/><genericClass value="00"/><specificClass value="00"/><beamSensor>0</beamSensor><certNumber>ZC10-16085163</certNumber><rfFrequency>US</rfFrequency></deviceData><deviceDescription><description><lang xml:lang="en">The Leak Gopher Meter Reader is a critical component to protect your home from costly damage due to a water leak. A burst pipe can result many thousands of dollars in repair costs and the Leak Gopher Meter Reader can inform you of the leak in time to prevent damage. </lang></description><productName>Leak Gopher Meter Reader</productName><brandName>Leak Intelligence, LLC</brandName><productCode>LGRM-1</productCode></deviceDescription><commandClasses/><assocGroups><assocGroup number="1" maxNodes="1"><description><lang xml:lang="en">Z-Wave Plus LifelineMeter reports are automatically sent to the Lifeline NodeID based on configuration values.The Meter Command Class is the primary class that reports the current pulse count of the water meter. Each water meter has a different quantity of water per pulse but typically is one gallon per pulse. Version 4 of the Meter command class is supported so the meter type and scales are reported by sending a METER_SUPPORTED_GET command. The type and scale define the meter as a water meter with a scale of Pulse Count.The pulse count is an accumulated value that is retained even if power is lost. Pulses that occur while power is off are NOT included. To avoid wearing out the electronics, the current pulse count is stored once per hour so if power is lost just before the LGMR was going to store the pulse count, then all the pulse counts in the past hour will be lost.The pulse count is a 32 bit number. If the maximum value is reached, the pulse count will remain at the maximum count. The pulse count is cleared to zero with a METER_RESET command. The pulse count stored in non-volatile memory is also immediately zeroed.CRC_16_ENCAP command class is supported which can be used to ensure the meter reading is accurate and that no corruption of the data has occurred during the transfer over the radio. If a METER_GET is encapsulated in a CRC16 frame, then the METER_REPORT is returned also encapsulated in a CRC16 frame.</lang></description></assocGroup></assocGroups><configParams><configParam number="1" size="1" default="10" type="range"><name><lang xml:lang="en">DEBOUNCE</lang></name><description><lang xml:lang="en">DEBOUNCE applies a filter the meter pulse to ensure the meter count is incremented only once with each pulse. The default should work for most meters. If the meter pulses are more than 100/second, then a lower DEBOUNCE value should be used. If the pulse count is incrementing by more than 1 with each pulse, then the DEBOUNCE parameter should be increased. Note that increasing the DEBOUNCE value lowers the maximum pulse rate that can be accumulated. For example, a DEBOUNCE of 100 means any pulse of less than 100ms (1/10th of second) will be filtered out an not counted so the maximum pulse rate that can be accumulated is 5 pulses/sec.</lang></description><value from="1" to="255"><description><lang xml:lang="en">100ms</lang></description></value></configParam><configParam number="2" size="1" default="10" type="rangemapped"><name><lang xml:lang="en">RATE COUNT</lang></name><description><lang xml:lang="en">Pulse counts are automatically sent to the Association Group 1 NodeID every time the pulse count is incremented by value of this parameter. The maximum rate of reports is once per minute so the pulse count can increment by more than this number. A Pulse Rate of 0 turns off the automatic reporting feature and the system controller has to poll to get the current pulse count.</lang></description><value from="1" to="255"><description><lang xml:lang="en">Pulse Counts</lang></description></value><value from="0" to="0"><description><lang xml:lang="en">disabled</lang></description></value></configParam><configParam number="3" size="1" default="0" type="rangemapped"><name><lang xml:lang="en">RATE TIME</lang></name><description><lang xml:lang="en">Pulse counts are automatically sent to the Association Group 1 NodeID every 1/10th of an hour times this parameter. A value of 0 turns off the automatic reporting feature and the system controller has to poll to get the current pulse count.Pulse counts are reported via the Z-Wave Meter Command Class and are sent to the NodeID configured in Association group 1. If BOTH Rate Count and Rate Time are zero, the home automation system has to poll the meter value using a METER_GET command. If either Rate Count or Rate Time are non-zero, then METER_REPORTs are automatically sent when either condition triggers. Rate Count is ideal to quickly determine if there was a sudden increase in water flow for example if a pipe has burst. As soon as the pulse count has incremented by the Rate Count value, a meter report will be sent to the Lifeline. The Rate Time parameter is ideal for determining if there is a slow leak in the system where the rate count is slowly incrementing 24 hours per day. Note that small leaks are limited by the minimum flow rate of the water meter. Typically Rate Time is set to 20 so that a report is sent every two hours at a minimum if this feature is desired. Note that the default for Rate Time is 0 which disables this mode.</lang></description><value from="0" to="0"><description><lang xml:lang="en">disabled</lang></description></value><value from="1" to="255"><description><lang xml:lang="en">1/10ths of an hour</lang></description></value></configParam></configParams><resourceLinks><deviceImage url="https://products.z-wavealliance.org/ProductImages/Index?productName=ZC10-16085163"/></resourceLinks></ZWaveDevice>
