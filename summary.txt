В репозитории есть 3 примера для работы с OpenZWave, папка ozway, в которой
находятся измененная OpenZWave и libzway для ubuntu, и папка script в которой
лежит код на си для вставки заглушек _NOT_YET_IMPEMENTED_ и _NOT_SUPPORTED_.
libzway стоит удалить, в README указана ссылка для ее отдельной установки.
Сама установка ни чем не отличается от установки OpenZWave, за исключением того,
что предварительно нужно установить библиотеку ZWay.
Скорее всего стоит добавить в мейкфайл в правило install удаление оригинальной OpenZWave.
Какого-то элегантного способа соотнести CC или ValueID придумать не получилось.
Единственная идея, которая возможно облегчит работу, - это написать шаблоны
функций GetValue и SetValue, в которых обрабатывать типы с помощью <type_traits>
std::is_equal<T1, T2>(), а оригинальные GetValue и SetValue использовать в качестве оболочки
В файлах Wrapper.cpp и Wrapper.h находятся обертки для вотчеров.
Все измененные части кода в файлах оригинальной библиотеки помечены комментарием ZSA
В скрипт для заглушек, наверное, стоит добавить обработку только public методов.
Т.к. OpenZWave поддерживает несколько драйверов и многопоточность, для их
корректной работы нужно имплементировать метод QueueNotification с заглушками.
